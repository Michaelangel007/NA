;************************INCLUDE FILE*****************************
;(do not assemble stand-alone.  )


;=====================INCLUDE FILE DOCUMENTATION====================================
;
;Include file to DATA.GAME.INVENTORY.ASM
;
;=================================================================================


;PC CHARACTER SHEET DATA: READIED EQUIPMENT
@START
CHR_SHEET.PC.READIED_EQUIP.START		
CHR_SHEET.PC.READIED_EQUIP.PC_01	.HS	00.01.03.00.01.09.01.01.01.0A.01.0B.02.40.02.41
CHR_SHEET.PC.READIED_EQUIP.PC_02	.HS	00.02.03.00.01.09.01.02.01.0A.01.0B.02.40.02.41
CHR_SHEET.PC.READIED_EQUIP.PC_03	.HS	00.03.03.00.01.09.01.03.01.0A.01.0B.02.40.02.41
CHR_SHEET.PC.READIED_EQUIP.PC_04	.HS	00.04.03.00.01.09.01.04.01.0A.01.0B.02.40.02.41
CHR_SHEET.PC.READIED_EQUIP.PC_05	.HS	00.05.03.00.01.09.01.05.01.0A.01.0B.02.40.02.41
CHR_SHEET.PC.READIED_EQUIP.PC_06	.HS	00.06.03.00.01.09.01.06.01.0A.01.0B.02.40.02.41
CHR_SHEET.PC.READIED_EQUIP.END		

	


CHR_SHEET.PC.READIED_EQUIP.SIZE = CHR_SHEET.PC.READIED_EQUIP.END-CHR_SHEET.PC.READIED_EQUIP.START
		
	;this .BS adds filler up to the next ProDOS block. This is necessary because ProRWTS 
	;has a minimum write size of 1 block, so when this data is written back to the file the filler 
	;makes sure that the data in the next file section isn't clobbered.
	.BS $200-CHR_SHEET.PC.READIED_EQUIP.SIZE
	
@END


;PC INVENTORY TEST DATA
@START
;LOCAL VARIABLES
INV.PLAYER.INVENTORY.DATA.TOTAL_SIZE	.EQ $600

;------------

INV.PLAYER.INVENTORY.DATA.START
	.PH INV.PLAYER.INVENTORY.DATA  ;****WARNING: this patch section must start and end on a page boundary as the HO byte of the start/end address is used for start/end-of-array detection in several inventory routines. 
INV.PLAYER.INVENTORY.DATA.PATCH_START
;------------
INV.PLAYER.INVENTORY.DATA.REC_00	.HS	00.00.06.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_01	.HS	01.00.06.00.00.03

;!!!!WARNING: the INV.DEBUG.LOG.WRITE data corruption trap tests bytes above

INV.PLAYER.INVENTORY.DATA.REC_02	.HS	80.07.01.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_03	.HS	00.08.01.00.00.81
INV.PLAYER.INVENTORY.DATA.REC_04	.HS	00.01.02.04.00.01
INV.PLAYER.INVENTORY.DATA.REC_05	.HS	00.02.01.08.00.01
INV.PLAYER.INVENTORY.DATA.REC_06	.HS	00.03.02.10.00.01
INV.PLAYER.INVENTORY.DATA.REC_07	.HS	00.04.01.20.00.01
INV.PLAYER.INVENTORY.DATA.REC_08	.HS	00.05.01.40.00.01
INV.PLAYER.INVENTORY.DATA.REC_09	.HS	00.06.01.80.00.01
INV.PLAYER.INVENTORY.DATA.REC_0A	.HS	01.01.01.04.00.03
INV.PLAYER.INVENTORY.DATA.REC_0B	.HS	01.02.FC.08.00.03
INV.PLAYER.INVENTORY.DATA.REC_0C	.HS	01.03.01.10.00.03
INV.PLAYER.INVENTORY.DATA.REC_0D	.HS	01.04.01.20.00.03
INV.PLAYER.INVENTORY.DATA.REC_0E	.HS	01.05.01.40.00.03
INV.PLAYER.INVENTORY.DATA.REC_0F	.HS	01.06.01.80.00.03
INV.PLAYER.INVENTORY.DATA.REC_010	.HS	01.09.06.FC.00.02
INV.PLAYER.INVENTORY.DATA.REC_011	.HS	01.0A.06.FC.00.04
INV.PLAYER.INVENTORY.DATA.REC_012	.HS	01.0B.06.FC.00.05
INV.PLAYER.INVENTORY.DATA.REC_013	.HS	02.40.06.FC.00.06
INV.PLAYER.INVENTORY.DATA.REC_014	.HS	02.41.06.FC.00.07
INV.PLAYER.INVENTORY.DATA.REC_015	.HS	02.00.02.00.00.08
INV.PLAYER.INVENTORY.DATA.REC_016	.HS	02.01.01.00.00.08
INV.PLAYER.INVENTORY.DATA.REC_017	.HS	00.0B.01.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_018	.HS	00.0C.02.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_019	.HS	02.03.01.00.00.08
INV.PLAYER.INVENTORY.DATA.REC_01A	.HS	02.07.01.00.00.08
INV.PLAYER.INVENTORY.DATA.REC_01B	.HS	02.15.01.00.00.08
INV.PLAYER.INVENTORY.DATA.REC_01C	.HS	02.30.01.00.00.08
INV.PLAYER.INVENTORY.DATA.REC_01D	.HS	00.11.07.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_01E	.HS	00.12.08.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_01F	.HS	00.13.09.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_020	.HS	00.14.0A.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_021	.HS	00.15.0B.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_022	.HS	00.16.0C.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_023	.HS	00.17.0D.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_024	.HS	00.18.0E.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_025	.HS	00.19.0F.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_026	.HS	00.1A.10.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_027	.HS	00.1B.11.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_028	.HS	00.1C.12.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_029	.HS	00.1D.13.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_02A	.HS	00.1E.14.00.00.01
INV.PLAYER.INVENTORY.DATA.REC_02B	.HS	00.1F.15.00.00.01
		
INV.PLAYER.INVENTORY.DATA.REC_02C	.HS	02.12.05.00.00.08
INV.PLAYER.INVENTORY.DATA.REC_02D	.HS	02.13.01.00.00.08

	
;INV.PLAYER.INVENTORY.DATA.REC_02C	.HS	11.07.04.00.00.03



; ;*****TEMP TEST DATA*****
; INV.PLAYER.INVENTORY.DATA.REC_012b	.HS	01.0C.01.00.00.05
; INV.PLAYER.INVENTORY.DATA.REC_012c	.HS	01.0D.01.00.00.00
; INV.PLAYER.INVENTORY.DATA.REC_012d	.HS	01.0E.01.00.00.05
; ;-----------------------------

	;.NO $BFFA,$00
	

;======DON'T MESS WITH THIS=====
INV.PLAYER.INVENTORY.TEST_DATA.END

INV.PLAYER.INVENTORY.TEST_DATA.BYTES.USED = INV.PLAYER.INVENTORY.TEST_DATA.END-INV.PLAYER.INVENTORY.DATA.PATCH_START

;****WARNING: the size of the inventory table must be an even number of pages or the inventory file
;will get corrupted when the inventory table is written to the file. This is because the minimum write size in ProRWTS is
;one ProDOS block (2 pages).

	;fill remainder of inventory table
	.BS INV.PLAYER.INVENTORY.DATA.TOTAL_SIZE-INV.PLAYER.INVENTORY.TEST_DATA.BYTES.USED-1, $FF ;$FF is the open record value in INV.PLAYER.INVENTORY.DATA array (byte $0). The -1 at the end of the formula is so that INV.PLAYER.INVENTORY.DATA.PATCH_END ends up resolving to $BFFF instead of $C000


INV.PLAYER.INVENTORY.DATA.PATCH_END

	.EP ;end patch mode

	


@END
