;************************INCLUDE FILE*****************************
;(do not assemble stand-alone. For a stand-alone version of this routine see examples/rwts2)


;NOTE: THERE ARE VARIABLES USED HERE THAT ARE NOT DEFINED HERE. I SHOULD EITHER MOVE THE VARIABLES DEFINITIONS
;HERE FROM THE GRAPHICS ENGINE, OR USE DIFFERENT VARIABLES. 

;LIST OF FUNCTIONS;
;
;FLIP.PAGE					;SET ACTIVE PAGE TO BACKGROUND AND BACKGROUND PAGE TO ACTIVE
;SCLEAR						;CLEAR BOTH PAGES
;GET.LINE.ADDRESS			;GET BASE ADDRESS FOR LINE, FOR PAGE 1 OR PAGE 2

FLIP.PAGE 		;============SET ACTIVE PAGE TO BACKGROUND==========
;PARAMETERS: PAGE (#$01 OR #$02)
;RETURN: NONE

;DETERMINE WHICH PAGE IS ACTIVE
	LDA PAGE.ACTIVE
	CMP #$02
	BEQ .PAGE2.CURRENTLY.ACTIVE
	CMP #$01				;DOES ACC = PAGE1? IF, YES FALL THROUGH TO PAGE 1 LOOKUP
	BNE .ERROR				;IF NO, INPUT NOT VALID, EXIT ERROR. 

.PAGE1.CURRENTLY.ACTIVE
	LDA PAGE2				;SET PAGE1 AS BACKGROUND, SET PAGE2 AS FOREGROUND
	LDA #$02				;SAVE TO PAGE VARIABLE
	STA PAGE.ACTIVE
	LDA #$01
	STA PAGE.OPPOSITE
	RTS
	
.PAGE2.CURRENTLY.ACTIVE
	LDA PAGE1				;SET PAGE2 AS BACKGROUND, SET PAGE1 AS FOREGROUND
	LDA #$01				;SAVE TO PAGE VARIABLE
	STA PAGE.ACTIVE
	LDA #$02
	STA PAGE.OPPOSITE
	RTS
	
.ERROR
	BRK	
	
SCLEAR					 ;============Clear Hi-Res Screen (Page 1 and 2)==========
;PARAMTERS: ACC[DEFAULT = BOTH, #$01, PAGE1, #$02, PAGE2, #$03 BACKGROUND PAGE] 
;OPTIONAL: (PAGE.OPPOSITE), only required if ACC == #$03 is passed			
;RETURN: NONE


;DETERMINE WHICH PAGE TO CLEAR
	CMP #$01
	BEQ .P1			;PAGE1
	CMP #$02		
	BEQ .P2			;PAGE2	
	CMP #$03
	BEQ	.P3			;BACKGROUND PAGE
.DEFAULT
	LDA #$60
	STA SCLEAR.PAGE.STOP.ADDRESS	;SETUP PAGE1&2 CLEAR, BY DEFAULT
	
	LDA #$20
	STA LINE.BASE.ADDR1+$1
	JMP .START
	
.P3 ;SETUP BACKGROUND PAGE CLEAR
		
	LDA PAGE.OPPOSITE
	CMP #$02
	BEQ .P2					;PAGE 2 IS BACKGROUND. 
	CMP #$01				
	BEQ .P1					;PAGE 1 IS BACKGROUND
	JMP .ERROR				;OTHERWISE, INPUT NOT VALID, EXIT ERROR. 


.P2	;SETUP PAGE2 CLEAR
	LDA #$60
	STA SCLEAR.PAGE.STOP.ADDRESS	
	
	LDA #$30
	STA LINE.BASE.ADDR1+$1
	JMP .START
	
	
.P1	;SETUP PAGE 1 CLEAR
	LDA #$40
	STA SCLEAR.PAGE.STOP.ADDRESS
	LDA #$20
	STA LINE.BASE.ADDR1+$1
	
.START
	
	LDA #$00
	STA LINE.BASE.ADDR1				;ALL 3 SCENARIOS HAVE $00 IN THE LO BYTE
	
.CLR1
	LDY #$00
	LDA	#$00
.CLR
	STA	(LINE.BASE.ADDR1), Y
	INY
	BNE .CLR
	INC LINE.BASE.ADDR1+$1
	LDA LINE.BASE.ADDR1+$1
	CMP SCLEAR.PAGE.STOP.ADDRESS
	BCC	.CLR1		;is acc less than cmp

	RTS

.ERROR
	BRK	
	
	
GET.LINE.ADDRESS1		;============GET BASE MEMORY ADDRESS FOR GIVEN LINE (X)=========

;PARAMETERS: X-REG = line number, ACC = Page Number (#$1 or #$2)
;RETURN: LINE.BASE.ADDR (2)

	CMP #$02
	BEQ .LOOKUP.PAGE2
	CMP #$01				;DOES ACC = PAGE1? IF, YES FALL THROUGH TO PAGE 1 LOOKUP
	BNE .ERROR				;IF NO, INPUT NOT VALID, EXIT ERROR. 

	
.LOOKUP.PAGE1	
	LDA LINE.HO.P1,X		;GET LINE ADDRESS
	STA LINE.BASE.ADDR1+$1
	LDA LINE.LO,X
	STA LINE.BASE.ADDR1
	RTS

.LOOKUP.PAGE2
	LDA LINE.HO.P2,X		;GET LINE ADDRESS
	STA LINE.BASE.ADDR1+$1
	LDA LINE.LO,X
	STA LINE.BASE.ADDR1
	RTS

.ERROR
	;Error if ACC not set to page 1 (#$01) or page 2 (#$02), when calling this routine
	BRK


GET.LINE.ADDRESS2		;============DUPLICATE OF GET.LINE.ADDRESS1 SO TWO LINES CAN BE STORED IN MEMORY=========

;PARAMETERS: X-REG = line number, ACC = Page Number (#$1 or #$2)
;RETURN: LINE.BASE.ADDR (2)

	CMP #$02
	BEQ .LOOKUP.PAGE2
	CMP #$01				;DOES ACC = PAGE1? IF, YES FALL THROUGH TO PAGE 1 LOOKUP
	BNE .ERROR				;IF NO, INPUT NOT VALID, EXIT ERROR. 

	
.LOOKUP.PAGE1	
	LDA LINE.HO.P1,X		;GET LINE ADDRESS
	STA LINE.BASE.ADDR2+$1
	LDA LINE.LO,X
	STA LINE.BASE.ADDR2
	RTS

.LOOKUP.PAGE2
	LDA LINE.HO.P2,X		;GET LINE ADDRESS
	STA LINE.BASE.ADDR2+$1
	LDA LINE.LO,X
	STA LINE.BASE.ADDR2
	RTS

.ERROR
	;Error if ACC not set to page 1 (#$01) or page 2 (#$02), when calling this routine
	BRK
	
;=================DEFINE VARIABLES===============

SCLEAR.PAGE.STOP.ADDRESS	.BS		$01	

PAGE.ACTIVE		.BS $1							;1byt	USED WHEN CALLING DRAW.TILE SUBROUTINE (POSSIBLY OTHERS IN FUTURE) TO SPECIFY THE BACKGROUND PAGE (WHICH IS USUALLY THE ONE DRAWN ON)
PAGE.OPPOSITE	.BS	$1							;1byt	CONTAINS THE OPPOSITE VALUE OF PAGE, SO IT CAN BE USED BY ROUTINES THAT NEED TO DRAW TO THE BACKGROUND PAGE. 
